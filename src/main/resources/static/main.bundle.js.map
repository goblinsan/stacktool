{"version":3,"sources":["webpack:///./src/main/webapp async","webpack:///./src/main/webapp/main.ts","webpack:///./src/main/webapp/app/stackApp.component.ts","webpack:///./src/main/webapp/app/stackApp.module.ts","webpack:///./src/main/webapp/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main/webapp async\n// module id = 70\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport {StackAppModule} from './app/stackApp.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(StackAppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/webapp/main.ts","import {Component} from '@angular/core';\nimport {TraverseInputs} from './traverseInputs';\nimport {Headers, Http, RequestOptions, Response} from '@angular/http';\n\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Component({\n    selector: 'stack-app',\n    template: `\n        <nav class=\"navbar navbar-inverse bg-inverse\">\n            <h1 class=\"navbar-brand mb-0\">Stacktool</h1>\n        </nav>\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Traverse Point Finder</h4>\n                <div class=\"card-block\">\n                    <div class=\"form-group\">\n                        <label>Stack Diameter (inches)</label>\n                        <input class=\"form-control form-control-lg\" [(ngModel)]=\"traverseInputs.stackDiameter\" (keyup)=\"onChanges()\" placeholder=\"Stack Diameter\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Port Depth (inches)</label>\n                        <input class=\"form-control form-control-lg\" [(ngModel)]=\"traverseInputs.portDepth\" (keyup)=\"onChanges()\" placeholder=\"Port Depth\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Total Traverse Points</label>\n                        <input class=\"form-control form-control-lg\" [(ngModel)]=\"traverseInputs.numberOfPoints\" (keyup)=\"onChanges()\" placeholder=\"Traverse Points\"/>\n                    </div>\n                </div>\n                <div class=\"card-block\" *ngIf=\"!serviceError  && traversePoints.length > 0\">\n                        <h5>Probe Markings (inches):</h5>\n                        <div *ngIf=\"traversePoints\">\n                            <ul class=\"list-group\" *ngFor=\"let point of traversePoints\">\n                                <li class=\"list-group-item\">{{point}}</li>\n                            </ul>\n                        </div>\n                </div>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"serviceError\">\n                    Valid Traverse Points are: 4,8,12,16,20,24.\n                    <p *ngIf=\"debugMode\">{{serviceError}}</p>\n                </div>\n                \n            </div>\n        </div>\n    `\n})\nexport class StackAppComponent {\n    traverseInputs: TraverseInputs = {\n        stackDiameter: null,\n        portDepth: 0,\n        numberOfPoints: null,\n    };\n    completeInput: boolean;\n    serviceError: String = '';\n    debugMode: boolean;\n    traversePoints: number[] = [];\n\n    traverseApiUrl = 'api/pointCalcs';\n\n    constructor(private http: Http) { }\n\n    onChanges() {\n        if (this.traverseInputs.stackDiameter > 0\n            && this.traverseInputs.portDepth >= 0\n            && this.traverseInputs.numberOfPoints > 0 ) {\n            this.completeInput = true;\n            this.getPoints(this.traverseInputs).subscribe((points) => { this.traversePoints = points; this.serviceError = ''; }, (error) => this.serviceError = error);\n        } else {\n            this.completeInput = false;\n        }\n    }\n\n    // .then((response) => response.json().data as number[])\n    getPoints(traverseInputs: TraverseInputs): Observable<number[]> {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        const options = new RequestOptions({ headers });\n        this.traversePoints = [];\n        return this.http.post(this.traverseApiUrl, traverseInputs, options)\n            .map(this.extractData)\n            .catch(this.handleError);\n    };\n\n    private extractData(res: Response) {\n        const body = res.json();\n        return body || { };\n    }\n\n    private handleError(error: Response | any) {\n        let errMsg: string;\n\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/webapp/app/stackApp.component.ts","import {NgModule} from '@angular/core';\nimport {StackAppComponent} from './stackApp.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\n@NgModule({\n    imports: [BrowserModule, FormsModule, HttpModule],\n    declarations: [StackAppComponent],\n    bootstrap: [StackAppComponent]\n})\nexport class StackAppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/webapp/app/stackApp.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/webapp/environments/environment.ts"],"sourceRoot":""}